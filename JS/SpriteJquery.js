(function (a) { a._spritely = { instances: {}, animate: function (k) { var d = a(k.el); var i = d.attr("id"); if (!a._spritely.instances[i]) { return this } k = a.extend(k, a._spritely.instances[i] || {}); if (k.type == "sprite" && k.fps) { if (k.play_frames && !a._spritely.instances[i]["remaining_frames"]) { a._spritely.instances[i]["remaining_frames"] = k.play_frames + 1 } else { if (k.do_once && !a._spritely.instances[i]["remaining_frames"]) { a._spritely.instances[i]["remaining_frames"] = k.no_of_frames } } var g; var c = function (r) { var m = k.width, q = k.height; if (!g) { g = []; total = 0; for (var p = 0; p < k.no_of_frames; p++) { g[g.length] = (0 - total); total += m } } if (a._spritely.instances[i]["current_frame"] == 0) { if (k.on_first_frame) { k.on_first_frame(r) } } else { if (a._spritely.instances[i]["current_frame"] == g.length - 1) { if (k.on_last_frame) { k.on_last_frame(r) } } } if (k.on_frame && k.on_frame[a._spritely.instances[i]["current_frame"]]) { k.on_frame[a._spritely.instances[i]["current_frame"]](r) } if (k.rewind == true) { if (a._spritely.instances[i]["current_frame"] <= 0) { a._spritely.instances[i]["current_frame"] = g.length - 1 } else { a._spritely.instances[i]["current_frame"] = a._spritely.instances[i]["current_frame"] - 1 } } else { if (a._spritely.instances[i]["current_frame"] >= g.length - 1) { a._spritely.instances[i]["current_frame"] = 0 } else { a._spritely.instances[i]["current_frame"] = a._spritely.instances[i]["current_frame"] + 1 } } var s = a._spritely.getBgY(r); r.css("background-position", g[a._spritely.instances[i]["current_frame"]] + "px " + s); if (k.bounce && k.bounce[0] > 0 && k.bounce[1] > 0) { var l = k.bounce[0]; var n = k.bounce[1]; var o = k.bounce[2]; r.animate({ top: "+=" + l + "px", left: "-=" + n + "px" }, o).animate({ top: "-=" + l + "px", left: "+=" + n + "px" }, o) } }; if (a._spritely.instances[i]["remaining_frames"] && a._spritely.instances[i]["remaining_frames"] > 0) { a._spritely.instances[i]["remaining_frames"]--; if (a._spritely.instances[i]["remaining_frames"] == 0) { a._spritely.instances[i]["remaining_frames"] = -1; delete a._spritely.instances[i]["remaining_frames"]; return this } else { c(d) } } else { if (a._spritely.instances[i]["remaining_frames"] != -1) { c(d) } } } else { if (k.type == "pan") { if (!a._spritely.instances[i]["_stopped"]) { var e = k.speed || 1, j = a._spritely.instances[i]["l"] || parseInt(a._spritely.getBgX(d).replace("px", ""), 10) || 0, h = a._spritely.instances[i]["t"] || parseInt(a._spritely.getBgY(d).replace("px", ""), 10) || 0; if (k.do_once && !a._spritely.instances[i].remaining_frames || a._spritely.instances[i].remaining_frames <= 0) { switch (k.dir) { case "up": case "down": a._spritely.instances[i].remaining_frames = Math.floor((k.img_height || 0) / e); break; case "left": case "right": a._spritely.instances[i].remaining_frames = Math.floor((k.img_width || 0) / e); break } a._spritely.instances[i].remaining_frames++ } else { if (k.do_once) { a._spritely.instances[i].remaining_frames-- } } switch (k.dir) { case "up": e *= -1; case "down": if (!a._spritely.instances[i]["l"]) { a._spritely.instances[i]["l"] = j } a._spritely.instances[i]["t"] = h + e; if (k.img_height) { a._spritely.instances[i]["t"] %= k.img_height } break; case "left": e *= -1; case "right": if (!a._spritely.instances[i]["t"]) { a._spritely.instances[i]["t"] = h } a._spritely.instances[i]["l"] = j + e; if (k.img_width) { a._spritely.instances[i]["l"] %= k.img_width } break } var f = a._spritely.instances[i]["l"].toString(); if (f.indexOf("%") == -1) { f += "px " } else { f += " " } var b = a._spritely.instances[i]["t"].toString(); if (b.indexOf("%") == -1) { b += "px " } else { b += " " } a(d).css("background-position", f + b); if (k.do_once && !a._spritely.instances[i].remaining_frames) { return this } } } } a._spritely.instances[i]["options"] = k; a._spritely.instances[i]["timeout"] = window.setTimeout(function () { a._spritely.animate(k) }, parseInt(1000 / k.fps)) }, randomIntBetween: function (c, b) { return parseInt(rand_no = Math.floor((b - (c - 1)) * Math.random()) + c) }, getBgUseXY: (function () { try { return typeof a("body").css("background-position-x") == "string" } catch (b) { return false } })(), getBgY: function (b) { if (a._spritely.getBgUseXY) { return a(b).css("background-position-y") || "0" } else { return (a(b).css("background-position") || " ").split(" ")[1] } }, getBgX: function (b) { if (a._spritely.getBgUseXY) { return a(b).css("background-position-x") || "0" } else { return (a(b).css("background-position") || " ").split(" ")[0] } }, get_rel_pos: function (d, b) { var c = d; if (d < 0) { while (c < 0) { c += b } } else { while (c > b) { c -= b } } return c }, _spStrip: function (e, f) { while (e.length) { var c, d, h = false, j = false; for (c = 0; c < f.length; c++) { var b = e.slice(0, 1); d = e.slice(1); if (f.indexOf(b) > -1) { e = d } else { h = true } } for (c = 0; c < f.length; c++) { var g = e.slice(-1); d = e.slice(0, -1); if (f.indexOf(g) > -1) { e = d } else { j = true } } if (h && j) { return e } } return "" } }; a.fn.extend({ spritely: function (d) { var f = a(this), b = f.attr("id"), d = a.extend({ type: "sprite", do_once: false, width: null, height: null, img_width: 0, img_height: 0, fps: 12, no_of_frames: 2, play_frames: 0 }, d || {}), e = (new Image()), c = a._spritely._spStrip(f.css("background-image") || "", 'url("); '); if (!a._spritely.instances[b]) { if (d.start_at_frame) { a._spritely.instances[b] = { current_frame: d.start_at_frame - 1} } else { a._spritely.instances[b] = { current_frame: -1} } } a._spritely.instances[b]["type"] = d.type; a._spritely.instances[b]["depth"] = d.depth; d.el = f; d.width = d.width || f.width() || 100; d.height = d.height || f.height() || 100; e.onload = function () { d.img_width = e.width; d.img_height = e.height; d.img = e; var g = function () { return parseInt(1000 / d.fps) }; if (!d.do_once) { setTimeout(function () { a._spritely.animate(d) }, g(d.fps)) } else { setTimeout(function () { a._spritely.animate(d) }, 0) } }; e.src = c; return this }, sprite: function (b) { var b = a.extend({ type: "sprite", bounce: [0, 0, 1000] }, b || {}); return a(this).spritely(b) }, pan: function (b) { var b = a.extend({ type: "pan", dir: "left", continuous: true, speed: 1 }, b || {}); return a(this).spritely(b) }, flyToTap: function (b) { var b = a.extend({ el_to_move: null, type: "moveToTap", ms: 1000, do_once: true }, b || {}); if (b.el_to_move) { a(b.el_to_move).active() } if (a._spritely.activeSprite) { if (window.Touch) { a(this)[0].ontouchstart = function (g) { var f = a._spritely.activeSprite; var h = g.touches[0]; var d = h.pageY - (f.height() / 2); var c = h.pageX - (f.width() / 2); f.animate({ top: d + "px", left: c + "px" }, 1000) } } else { a(this).click(function (j) { var g = a._spritely.activeSprite; a(g).stop(true); var d = g.width(); var i = g.height(); var c = j.pageX - (d / 2); var f = j.pageY - (i / 2); g.animate({ top: f + "px", left: c + "px" }, 1000) }) } } return this }, isDraggable: function (c) { if ((!a(this).draggable)) { return this } var c = a.extend({ type: "isDraggable", start: null, stop: null, drag: null }, c || {}); var b = a(this).attr("id"); if (!a._spritely.instances[b]) { return this } a._spritely.instances[b].isDraggableOptions = c; a(this).draggable({ start: function () { var d = a(this).attr("id"); a._spritely.instances[d].stop_random = true; a(this).stop(true); if (a._spritely.instances[d].isDraggableOptions.start) { a._spritely.instances[d].isDraggableOptions.start(this) } }, drag: c.drag, stop: function () { var d = a(this).attr("id"); a._spritely.instances[d].stop_random = false; if (a._spritely.instances[d].isDraggableOptions.stop) { a._spritely.instances[d].isDraggableOptions.stop(this) } } }); return this }, active: function () { a._spritely.activeSprite = this; return this }, activeOnClick: function () { var b = a(this); if (window.Touch) { b[0].ontouchstart = function (c) { a._spritely.activeSprite = b } } else { b.click(function (c) { a._spritely.activeSprite = b }) } return this }, spRandom: function (d) { var d = a.extend({ top: 50, left: 50, right: 290, bottom: 320, speed: 4000, pause: 0 }, d || {}); var b = a(this).attr("id"); if (!a._spritely.instances[b]) { return this } if (!a._spritely.instances[b].stop_random) { var f = a._spritely.randomIntBetween; var e = f(d.top, d.bottom); var c = f(d.left, d.right); a("#" + b).animate({ top: e + "px", left: c + "px" }, d.speed) } window.setTimeout(function () { a("#" + b).spRandom(d) }, d.speed + d.pause); return this }, makeAbsolute: function () { return this.each(function () { var b = a(this); var c = b.position(); b.css({ position: "absolute", marginLeft: 0, marginTop: 0, top: c.top, left: c.left }).remove().appendTo("body") }) }, spSet: function (d, c) { var b = a(this).attr("id"); a._spritely.instances[b][d] = c; return this }, spGet: function (d, c) { var b = a(this).attr("id"); return a._spritely.instances[b][d] }, spStop: function (b) { this.each(function () { var e = a(this), c = e.attr("id"); if (a._spritely.instances[c]["options"]["fps"]) { a._spritely.instances[c]["_last_fps"] = a._spritely.instances[c]["options"]["fps"] } if (a._spritely.instances[c]["type"] == "sprite") { e.spSet("fps", 0) } a._spritely.instances[c]["_stopped"] = true; a._spritely.instances[c]["_stopped_f1"] = b; if (b) { var d = a._spritely.getBgY(a(this)); e.css("background-position", "0 " + d) } }); return this }, spStart: function () { a(this).each(function () { var b = a(this).attr("id"); var c = a._spritely.instances[b]["_last_fps"] || 12; if (a._spritely.instances[b]["type"] == "sprite") { a(this).spSet("fps", c) } a._spritely.instances[b]["_stopped"] = false }); return this }, spToggle: function () { var b = a(this).attr("id"); var d = a._spritely.instances[b]["_stopped"] || false; var c = a._spritely.instances[b]["_stopped_f1"] || false; if (d) { a(this).spStart() } else { a(this).spStop(c) } return this }, fps: function (b) { a(this).each(function () { a(this).spSet("fps", b) }); return this }, goToFrame: function (c) { var b = a(this).attr("id"); if (a._spritely.instances && a._spritely.instances[b]) { a._spritely.instances[b]["current_frame"] = c - 1 } return this }, spSpeed: function (b) { a(this).each(function () { a(this).spSet("speed", b) }); return this }, spRelSpeed: function (b) { a(this).each(function () { var c = a(this).spGet("depth") / 100; a(this).spSet("speed", b * c) }); return this }, spChangeDir: function (b) { a(this).each(function () { a(this).spSet("dir", b) }); return this }, spState: function (b) { a(this).each(function () { var d = ((b - 1) * a(this).height()) + "px"; var e = a._spritely.getBgX(a(this)); var c = e + " -" + d; a(this).css("background-position", c) }); return this }, lockTo: function (c, b) { a(this).each(function () { var d = a(this).attr("id"); if (!a._spritely.instances[d]) { return this } a._spritely.instances[d]["locked_el"] = a(this); a._spritely.instances[d]["lock_to"] = a(c); a._spritely.instances[d]["lock_to_options"] = b; a._spritely.instances[d]["interval"] = window.setInterval(function () { if (a._spritely.instances[d]["lock_to"]) { var g = a._spritely.instances[d]["locked_el"]; var j = a._spritely.instances[d]["lock_to"]; var f = a._spritely.instances[d]["lock_to_options"]; var m = f.bg_img_width; var i = j.height(); var k = a._spritely.getBgY(j); var l = a._spritely.getBgX(j); var h = (parseInt(l) + parseInt(f.left)); var e = (parseInt(k) + parseInt(f.top)); h = a._spritely.get_rel_pos(h, m); a(g).css({ top: e + "px", left: h + "px" }) } }, b.interval || 20) }); return this }, destroy: function () { var c = a(this); var b = a(this).attr("id"); if (a._spritely.instances[b] && a._spritely.instances[b]["timeout"]) { window.clearTimeout(a._spritely.instances[b]["timeout"]) } if (a._spritely.instances[b] && a._spritely.instances[b]["interval"]) { window.clearInterval(a._spritely.instances[b]["interval"]) } delete a._spritely.instances[b]; return this } }) })(jQuery); try { document.execCommand("BackgroundImageCache", false, true) } catch (err) { };
